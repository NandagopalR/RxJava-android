apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

android {
	compileSdkVersion 22
	buildToolsVersion "22.0.1"

	defaultConfig {
		applicationId "com.strv.rxjavademo"
		minSdkVersion 15
		targetSdkVersion 22
		versionCode 1
		versionName "1.0"
	}
	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}

	packagingOptions {
		exclude 'META-INF/LICENSE'
		exclude 'META-INF/LICENSE-FIREBASE.txt'
		exclude 'META-INF/NOTICE'
	}
}

dependencies {
	compile fileTree(dir: 'libs', include: ['*.jar'])
	compile 'com.android.support:appcompat-v7:22.2.1'
	compile 'com.android.support:cardview-v7:22.0.+'
	compile 'com.android.support:recyclerview-v7:22.0.+'

	compile 'com.squareup.picasso:picasso:2.5.2'

	compile 'com.jakewharton:butterknife:7.0.1'

	compile 'io.reactivex:rxandroid:1.0.1'
	compile 'com.jakewharton.rxbinding:rxbinding:0.2.0'
	compile 'io.reactivex:rxjava:1.0.14'

	compile 'com.squareup.retrofit:retrofit:1.9.0'

	compile 'com.firebase:firebase-client-android:2.3.1+'

	debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
	releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
}

String getJavaHome(String version)
{
	def stdout = new ByteArrayOutputStream()
	exec {
		commandLine "/usr/libexec/java_home", "-v", version
		standardOutput = stdout;
	}
	return stdout.toString().trim()
}

retrolambda {
	jdk System.getenv("JAVA8_HOME") ?: getJavaHome("1.8")
	oldJdk System.getenv("JAVA6_HOME") ?: getJavaHome("1.6")
}